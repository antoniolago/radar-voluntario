# ------------------------------------------------------
# NPM INSTALL CACHE
# ------------------------------------------------------
# Cria uma imagem de cache apenas para o node_modules
FROM arm64v8/node:20-alpine as node_cache
WORKDIR /cache
# Instalando dependências da aplicação e armazenando em cache.
COPY package*.json ./
COPY yarn.lock ./
RUN yarn install

# ------------------------------------------------------
# Build da aplicação
# ------------------------------------------------------
FROM node_cache as build

#Seta variáveis de ambiente para o build dos arquivos estáticos já presentes com as variáveis
#Toda nova variável usada no código react deve ser declarada aqui e no Jenkinsfile, no stage build_front.
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL $REACT_APP_API_URL

WORKDIR /src/app
COPY --from=node_cache /cache/ .
# Copy source files, and possibily invalidate so we have to rebuild
COPY . ./
# Builda a aplicação para o deploy
RUN yarn run build

# ------------------------------------------------------
# Webserver para a aplicação
# ------------------------------------------------------
FROM arm64v8/nginx:1.25.1
COPY --from=build /src/app/dist /usr/share/nginx/html
#Carrega configuração nginx
COPY nginx.conf /etc/nginx/conf.d/default.conf

WORKDIR /usr/share/nginx/html
EXPOSE 80

# RUN chmod -R 755 /usr/share/nginx/html
# RUN useradd -u 1000 -g root radarvoluntario

CMD ["nginx", "-g", "daemon off;"]