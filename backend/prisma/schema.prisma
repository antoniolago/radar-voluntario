// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String            @id @default(uuid())
  name          String
  email         String            @unique
  picture       String?
  about         String?
  phone         String?
  facebook      String?
  instagram     String?
  institutions  InstitutionUser[]
  opportunities OpportunityUser[]
  Institution   Institution[]

  @@map("users")
}

model Institution {
  id            String                @id @default(uuid())
  name          String
  about         String
  telephone     String?
  owner_id      String
  owner         User                  @relation(fields: [owner_id], references: [id])
  facebook      String?
  instagram     String?
  users         InstitutionUser[]
  opportunities Opportunity[]
  adresses      InstitutionAddress[]
  categories    InstitutionCategory[]

  @@map("institutions")
}

model InstitutionAddress {
  id             String        @id @default(uuid())
  name           String
  primary        Boolean       @default(false)
  street         String
  number         String
  complement     String
  city           String
  state          String
  neighborhood   String
  zip_code       String
  latitude       Float
  longitude      Float
  opportunities  Opportunity[]
  institution    Institution   @relation(fields: [institution_id], references: [id])
  institution_id String

  @@map("institutions_addresses")
}

model InstitutionCategory {
  id             String                @id @default(uuid())
  name           String
  institution    Institution           @relation(fields: [institution_id], references: [id])
  institution_id String
  opportunities  OpportunityCategory[]

  @@map("institutions_categories")
}

model InstitutionUser {
  id             String      @id @default(uuid())
  institution    Institution @relation(fields: [institution_id], references: [id])
  institution_id String
  user           User        @relation(fields: [user_id], references: [id])
  user_id        String

  @@map("institutions_users")
}

model Opportunity {
  id             String                @id @default(uuid())
  name           String
  description    String
  vacancies      Int
  published      Boolean               @default(false)
  online         Boolean               @default(false)
  start_date     DateTime
  end_date       DateTime
  users          OpportunityUser[]
  institution    Institution           @relation(fields: [institution_id], references: [id])
  institution_id String
  address        InstitutionAddress?   @relation(fields: [address_id], references: [id])
  address_id     String?
  categories     OpportunityCategory[]

  @@map("opportunities")
}

model OpportunityUser {
  id             String      @id @default(uuid())
  opportunity    Opportunity @relation(fields: [opportunity_id], references: [id])
  opportunity_id String
  user           User        @relation(fields: [user_id], references: [id])
  user_id        String

  @@map("opportunities_users")
}

model OpportunityCategory {
  id             String              @id @default(uuid())
  category       InstitutionCategory @relation(fields: [category_id], references: [id])
  category_id    String
  opportunity    Opportunity         @relation(fields: [opportunity_id], references: [id])
  opportunity_id String

  @@map("opportunities_categories")
}
